worker_processes 1;

events {
    worker_connections 512;
    use epoll;
    multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    types_hash_max_size 1024;
    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    access_log off;
    error_log /var/log/nginx/error.log warn;
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    limit_req_zone $binary_remote_addr zone=api:10m rate=1000r/s;
    
    upstream api_backend {
        server api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    server {
        listen 9999;
        server_name localhost;
        
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        limit_req zone=api burst=100 nodelay;
        
        location /clientes/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        location /health {
            proxy_pass http://api_backend;
            access_log off;
        }
        
        location /metrics {
            proxy_pass http://api_backend;
            access_log off;
        }
        
        location / {
            return 404;
        }
    }
} 